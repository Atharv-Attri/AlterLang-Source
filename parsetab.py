
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE Divide ENDMARK EQUAL IF LEQUAL LGT LLT MULTIPLY NUMBER NUMBER QTEXT QUOTE SAY SPACE STARTMARK VARIABLE WHILE\n    start : vars\n          | multiply\n          | say\n          | divide\n          | if\n          | endmark\n    \n    divide : DIVIDE\n    \n    vars : EQUAL\n    \n    vars : VARIABLE\n    \n    multiply : MULTIPLY\n    \n    say : SAY QTEXT\n        | SAY SPACE QTEXT\n    \n    say : SAY SPACE VARIABLE\n    \n    if : IF SPACE NUMBER LEQUAL LEQUAL NUMBER SPACE STARTMARK\n       | IF SPACE NUMBER LGT NUMBER SPACE STARTMARK\n       | IF SPACE NUMBER LLT NUMBER SPACE STARTMARK\n       | IF SPACE NUMBER LLT LEQUAL NUMBER SPACE STARTMARK\n       | IF SPACE NUMBER LGT LEQUAL NUMBER SPACE STARTMARK\n     \n    if : IF SPACE NUMBER LGT VARIABLE SPACE STARTMARK\n       | IF SPACE NUMBER LLT VARIABLE SPACE STARTMARK\n       | IF SPACE NUMBER LEQUAL VARIABLE SPACE STARTMARK\n       | IF SPACE NUMBER LLT LEQUAL VARIABLE SPACE STARTMARK\n       | IF SPACE NUMBER LGT LEQUAL VARIABLE SPACE STARTMARK\n    \n    endmark : ENDMARK\n    '
    
_lr_action_items = {'EQUAL':([0,],[8,]),'VARIABLE':([0,16,21,22,23,27,30,],[9,19,25,28,31,36,40,]),'MULTIPLY':([0,],[10,]),'SAY':([0,],[11,]),'DIVIDE':([0,],[12,]),'IF':([0,],[13,]),'ENDMARK':([0,],[14,]),'$end':([1,2,3,4,5,6,7,8,9,10,12,14,15,18,19,43,44,47,48,51,52,53,54,55,56,],[0,-1,-2,-3,-4,-5,-6,-8,-9,-10,-7,-24,-11,-12,-13,-21,-15,-19,-16,-20,-14,-18,-23,-17,-22,]),'QTEXT':([11,16,],[15,18,]),'SPACE':([11,13,25,26,28,29,31,32,35,36,39,40,],[16,17,33,34,37,38,41,42,45,46,49,50,]),'NUMBER':([17,22,23,24,27,30,],[20,26,29,32,35,39,]),'LEQUAL':([20,21,22,23,],[21,24,27,30,]),'LGT':([20,],[22,]),'LLT':([20,],[23,]),'STARTMARK':([33,34,37,38,41,42,45,46,49,50,],[43,44,47,48,51,52,53,54,55,56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'vars':([0,],[2,]),'multiply':([0,],[3,]),'say':([0,],[4,]),'divide':([0,],[5,]),'if':([0,],[6,]),'endmark':([0,],[7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> vars','start',1,'p_start','complier.py',86),
  ('start -> multiply','start',1,'p_start','complier.py',87),
  ('start -> say','start',1,'p_start','complier.py',88),
  ('start -> divide','start',1,'p_start','complier.py',89),
  ('start -> if','start',1,'p_start','complier.py',90),
  ('start -> endmark','start',1,'p_start','complier.py',91),
  ('divide -> DIVIDE','divide',1,'p_divide','complier.py',95),
  ('vars -> EQUAL','vars',1,'p_vars_set','complier.py',109),
  ('vars -> VARIABLE','vars',1,'p_vars_get','complier.py',120),
  ('multiply -> MULTIPLY','multiply',1,'p_multiply','complier.py',131),
  ('say -> SAY QTEXT','say',2,'p_say_onlyText','complier.py',152),
  ('say -> SAY SPACE QTEXT','say',3,'p_say_onlyText','complier.py',153),
  ('say -> SAY SPACE VARIABLE','say',3,'p_say_onlyvar','complier.py',169),
  ('if -> IF SPACE NUMBER LEQUAL LEQUAL NUMBER SPACE STARTMARK','if',8,'p_if_num','complier.py',175),
  ('if -> IF SPACE NUMBER LGT NUMBER SPACE STARTMARK','if',7,'p_if_num','complier.py',176),
  ('if -> IF SPACE NUMBER LLT NUMBER SPACE STARTMARK','if',7,'p_if_num','complier.py',177),
  ('if -> IF SPACE NUMBER LLT LEQUAL NUMBER SPACE STARTMARK','if',8,'p_if_num','complier.py',178),
  ('if -> IF SPACE NUMBER LGT LEQUAL NUMBER SPACE STARTMARK','if',8,'p_if_num','complier.py',179),
  ('if -> IF SPACE NUMBER LGT VARIABLE SPACE STARTMARK','if',7,'p_if_var_r','complier.py',238),
  ('if -> IF SPACE NUMBER LLT VARIABLE SPACE STARTMARK','if',7,'p_if_var_r','complier.py',239),
  ('if -> IF SPACE NUMBER LEQUAL VARIABLE SPACE STARTMARK','if',7,'p_if_var_r','complier.py',240),
  ('if -> IF SPACE NUMBER LLT LEQUAL VARIABLE SPACE STARTMARK','if',8,'p_if_var_r','complier.py',241),
  ('if -> IF SPACE NUMBER LGT LEQUAL VARIABLE SPACE STARTMARK','if',8,'p_if_var_r','complier.py',242),
  ('endmark -> ENDMARK','endmark',1,'p_endmark','complier.py',297),
]
