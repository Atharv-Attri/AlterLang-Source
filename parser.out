Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> say
Rule 1     say -> SAY QUOTE QTEXT QUOTE
Rule 2     say -> SAY SPACE QTEXT
Rule 3     vars -> EQUAL

Terminals, with rules where they appear

EQUAL                : 3
QTEXT                : 1 2
QUOTE                : 1 1
SAY                  : 1 2
SPACE                : 2
error                : 

Nonterminals, with rules where they appear

say                  : 0
vars                 : 

Parsing method: LALR

state 0

    (0) S' -> . say
    (1) say -> . SAY QUOTE QTEXT QUOTE
    (2) say -> . SAY SPACE QTEXT

    SAY             shift and go to state 2

    say                            shift and go to state 1

state 1

    (0) S' -> say .



state 2

    (1) say -> SAY . QUOTE QTEXT QUOTE
    (2) say -> SAY . SPACE QTEXT

    QUOTE           shift and go to state 3
    SPACE           shift and go to state 4


state 3

    (1) say -> SAY QUOTE . QTEXT QUOTE

    QTEXT           shift and go to state 5


state 4

    (2) say -> SAY SPACE . QTEXT

    QTEXT           shift and go to state 6


state 5

    (1) say -> SAY QUOTE QTEXT . QUOTE

    QUOTE           shift and go to state 7


state 6

    (2) say -> SAY SPACE QTEXT .

    $end            reduce using rule 2 (say -> SAY SPACE QTEXT .)


state 7

    (1) say -> SAY QUOTE QTEXT QUOTE .

    $end            reduce using rule 1 (say -> SAY QUOTE QTEXT QUOTE .)

